<?xml version="1.0" encoding="utf-8"?>

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <PackagesDirectory Condition="'$(PackagesDirectory)' == ''">$(MSBuildProjectDirectory)\..\packages\</PackagesDirectory>
    <MSBuildExtensionPackPath Condition="'$(MSBuildExtensionPackPath)' == ''">$(PackagesDirectory)MSBuild.Extension.Pack.1.5.0\tools\net40\</MSBuildExtensionPackPath>
    <ExtensionTasksPath>$(MSBuildExtensionPackPath)</ExtensionTasksPath>
    <DotNetCorePublicKeyPath>obj\netstandard1.0\RemotionPublic.snk</DotNetCorePublicKeyPath>
    <!--<DotNetCoreCliBootstrapScriptUrl>https://raw.githubusercontent.com/dotnet/cli/rel/1.0.0/scripts/obtain/dotnet-install.ps1</DotNetCoreCliBootstrapScriptUrl>-->
  </PropertyGroup>

  <Import Project="$(MSBuildExtensionPackPath)MSBuild.ExtensionPack.tasks" />

  <Target Name="DotNetCore_Build" DependsOnTargets="DotNetCore_PreparePaths;DotNetCore_GetSNPath;DotNetCore_InstallCli">
    <Error Text="Property 'AssemblyOriginatorKeyFile' was not set." Condition="'$(AssemblyOriginatorKeyFile)' == ''" />

    <!-- Extract public key -->
    <PropertyGroup>
      <_dotNetCoreIntermediateBasePath>$([System.IO.Path]::GetDirectoryName($(DotNetCorePublicKeyPath)))</_dotNetCoreIntermediateBasePath>
    </PropertyGroup>
    <MakeDir Directories="$(_dotNetCoreIntermediateBasePath)" />
    <Exec Command="&quot;$(SNPath)&quot; -p &quot;$(AssemblyOriginatorKeyFile)&quot; &quot;$(DotNetCorePublicKeyPath)&quot;" />

    <!-- Build -->
    <Exec Command="&quot;$(DotNetCoreCliExe)&quot; restore project.json" />
    <Exec Command="&quot;$(DotNetCoreCliExe)&quot; build project.json --configuration $(Configuration) --framework NetStandard1.0 --output &quot;$(DotNetCoreOutputPath).&quot; --build-base-path &quot;$(DotNetCoreIntermediateOutputPath).&quot;" />

    <!-- Delay-Sign with official key -->
    <Exec Command="&quot;$(SNPath)&quot; -R &quot;$(DotNetCoreAssemblyPath)&quot; &quot;$(AssemblyOriginatorKeyFile)&quot;" />

    <PropertyGroup>
      <TargetPath>$(TargetPath);$(DotNetCoreAssemblyPath)</TargetPath>
    </PropertyGroup>
  </Target>

  <Target Name="DotNetCore_Clean" DependsOnTargets="DotNetCore_PreparePaths">
    <ItemGroup>
      <DotNetCoreFiles Remove="@(DotNetCoreFiles)"/>
      <DotNetCoreFiles Include="$(DotNetCoreIntermediateOutputPath)**\*.*" />
      <DotNetCoreFiles Include="$(DotNetCoreOutputPath)**\*.*" />
      <DotNetCoreFiles Include="$(DotNetCorePublicKeyPath)" />
    </ItemGroup>
    <Delete Files="@(DotNetCoreFiles)" />
  </Target>

  <Target Name="DotNetCore_PreparePaths">
    <PropertyGroup>
      <DotNetCoreOutputPath>$(MSBuildProjectDirectory)\bin\$(Configuration)\netstandard1.0\</DotNetCoreOutputPath>
      <DotNetCoreIntermediateOutputPath>$(MSBuildProjectDirectory)\$(BaseIntermediateOutputPath)$(Configuration)\netstandard1.0\</DotNetCoreIntermediateOutputPath>
      <DotNetCoreAssemblyPath>$(DotNetCoreOutputPath)$(AssemblyName).dll</DotNetCoreAssemblyPath>
      <DotNetCoreCliBasePath>$(MSBuildProjectDirectory)\$(BaseIntermediateOutputPath)cli</DotNetCoreCliBasePath>
      <DotNetCoreCliVersionPath>$(DotNetCoreCliBasePath)\version.chk</DotNetCoreCliVersionPath>
      <!--<DotNetCoreCliBootstrapScriptPath>$(DotNetCoreCliBasePath)\dotnet-install.ps1</DotNetCoreCliBootstrapScriptPath>-->
      <!-- Local copy is required to support TLS 1.2 -->
      <DotNetCoreCliBootstrapScriptPath>$(MSBuildProjectDirectory)\dotnet-install.ps1</DotNetCoreCliBootstrapScriptPath>
      <DotNetCoreCliInstallPath>$(DotNetCoreCliBasePath)\bin</DotNetCoreCliInstallPath>
      <DotNetCoreCliExe>$(DotNetCoreCliInstallPath)\dotnet.exe</DotNetCoreCliExe>
    </PropertyGroup>
  </Target>

  <Target Name="DotNetCore_InstallCli" DependsOnTargets="DotNetCore_PreparePaths">
    <PropertyGroup>
      <!--<_downloadBootstrapCommand>-Command "Invoke-WebRequest -Uri '$(DotNetCoreCliBootstrapScriptUrl)' -OutFile '$(DotNetCoreCliBootstrapScriptPath)'"</_downloadBootstrapCommand>-->
      <_installCommand>-File "$(DotNetCoreCliBootstrapScriptPath)" -Channel rel-1.0.0 -InstallDir "$(DotNetCoreCliInstallPath)" -NoPath -Version 1.0.0-preview2-003121</_installCommand>
      <_oldVersion></_oldVersion>
      <_oldVersion Condition="Exists('$(DotNetCoreCliVersionPath)')">$([System.IO.File]::ReadAllText($(DotNetCoreCliVersionPath)))</_oldVersion>
    </PropertyGroup>

    <!-- Get CLI bootstrap script -->
    <MakeDir Directories="$(DotNetCoreCliBasePath)" />
    <Exec Command="powershell -ExecutionPolicy Bypass $(_downloadBootstrapCommand)" />

    <!-- Get CLI version -->
    <Exec Command="powershell -ExecutionPolicy Bypass $(_installCommand) -DryRun &gt; &quot;$(DotNetCoreCliVersionPath)&quot;" />
    
    <!-- Check CLI version -->
    <PropertyGroup>
      <_newVersion>$([System.IO.File]::ReadAllText($(DotNetCoreCliVersionPath)))</_newVersion>
      <_isCliUpdateRequired>False</_isCliUpdateRequired>
      <_isCliUpdateRequired Condition="'$(_oldVersion)' != '$(_newVersion)' OR !Exists('$(DotNetCoreCliInstallPath)')">True</_isCliUpdateRequired>
    </PropertyGroup>

    <!-- Update CLI version -->
    <Message Text="dotnet CLI update is required." Importance="High" Condition="'$(_isCliUpdateRequired)' == 'True'" />
    <Message Text="dotnet CLI is up to date." Importance="High" Condition="'$(_isCliUpdateRequired)' != 'True'" />
    <Exec Command="RMDIR &quot;$(DotNetCoreCliInstallPath)&quot; /q /s" Condition="'$(_isCliUpdateRequired)' == 'True'" />
    <Exec Command="powershell -ExecutionPolicy Bypass $(_installCommand)" Condition="'$(_isCliUpdateRequired)' == 'True'" />
    <Error Text="dotnet CLI was not found at '$(DotNetCoreCliExe)'." Condition="!Exists('$(DotNetCoreCliExe)')" />
  </Target>

  <Target Name="DotNetCore_GetSNPath">
    <GetFrameworkSdkPath>
      <Output TaskParameter="Path" PropertyName="_frameworkSdkPath" />
    </GetFrameworkSdkPath>
    <ItemGroup>
      <_firstSNPath Remove="@(_firstSNPath)" />
      <_snPath Remove="@(_snPath)" />
      <_snPath Include="$(_frameworkSdkPath)**\sn.exe" />
    </ItemGroup>
    <Error Text="No paths found for 'sn.exe': @(_snPath)" Condition="'@(_snPath->Count())' == '0'" />
    <MSBuild.ExtensionPack.Framework.MsBuildHelper TaskAction="GetItem" InputItems1="@(_snPath)" Position = "0" >
      <Output TaskParameter="OutputItems" ItemName="_firstSNPath" />
    </MSBuild.ExtensionPack.Framework.MsBuildHelper>

    <PropertyGroup>
      <SNPath>@(_firstSNPath)</SNPath>
    </PropertyGroup>
    <Message Text="Found sn.exe at '$(SNPath)'." Importance="High" />
  </Target>

</Project>